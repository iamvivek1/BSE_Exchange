version: '3.8'

services:
  # Redis Cache Service
  redis:
    image: redis:7-alpine
    container_name: bse-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - bse-network

  # BSE Backend Application
  bse-backend:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.backend
    container_name: bse-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=${FLASK_ENV:-production}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - BSE_API_KEY=${BSE_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ../logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - bse-network

  # Frontend Web Server
  bse-frontend:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.frontend
    container_name: bse-frontend
    ports:
      - "8080:80"
    depends_on:
      - bse-backend
    restart: unless-stopped
    networks:
      - bse-network

  # Monitoring Dashboard
  bse-monitoring:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.monitoring
    container_name: bse-monitoring
    ports:
      - "8081:8080"
    environment:
      - REDIS_HOST=redis
      - BACKEND_HOST=bse-backend
    depends_on:
      redis:
        condition: service_healthy
      bse-backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - bse-network

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: bse-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - bse-backend
      - bse-frontend
      - bse-monitoring
    restart: unless-stopped
    networks:
      - bse-network

volumes:
  redis_data:
    driver: local

networks:
  bse-network:
    driver: bridge